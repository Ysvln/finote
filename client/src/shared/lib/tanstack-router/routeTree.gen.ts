/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../../../routes/__root'
import { Route as IndexRouteImport } from './../../../routes/index'
import { Route as StatisticsIndexRouteImport } from './../../../routes/statistics/index'
import { Route as LedgerIndexRouteImport } from './../../../routes/ledger/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StatisticsIndexRoute = StatisticsIndexRouteImport.update({
  id: '/statistics/',
  path: '/statistics/',
  getParentRoute: () => rootRouteImport,
} as any)
const LedgerIndexRoute = LedgerIndexRouteImport.update({
  id: '/ledger/',
  path: '/ledger/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ledger': typeof LedgerIndexRoute
  '/statistics': typeof StatisticsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ledger': typeof LedgerIndexRoute
  '/statistics': typeof StatisticsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/ledger/': typeof LedgerIndexRoute
  '/statistics/': typeof StatisticsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/ledger' | '/statistics'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/ledger' | '/statistics'
  id: '__root__' | '/' | '/ledger/' | '/statistics/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LedgerIndexRoute: typeof LedgerIndexRoute
  StatisticsIndexRoute: typeof StatisticsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/statistics/': {
      id: '/statistics/'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof StatisticsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ledger/': {
      id: '/ledger/'
      path: '/ledger'
      fullPath: '/ledger'
      preLoaderRoute: typeof LedgerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LedgerIndexRoute: LedgerIndexRoute,
  StatisticsIndexRoute: StatisticsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
